<?xml version="1.0" ?>
<node name="/Channel_Type_Text" xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0">
  <tp:copyright> Copyright (C) 2005, 2006 Collabora Limited </tp:copyright>
  <tp:copyright> Copyright (C) 2005, 2006 Nokia Corporation </tp:copyright>
  <tp:copyright> Copyright (C) 2006 INdT </tp:copyright>
  <tp:license xmlns="http://www.w3.org/1999/xhtml">
    <p>This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.</p>

<p>This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Library General Public License for more details.</p>

<p>You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.</p>
  </tp:license>
  <interface name="org.freedesktop.Telepathy.Channel.Type.Text">
    <tp:requires interface="org.freedesktop.Telepathy.Channel"/>
    <method name="AcknowledgePendingMessages">
      <arg direction="in" name="ids" type="au">
        <tp:docstring>
          The IDs of the messages to acknowledge
        </tp:docstring>
      </arg>
      <tp:docstring>
        Inform the channel that you have handled messages by displaying them to
        the user (or equivalent), so they can be removed from the pending queue.
      </tp:docstring>
      <tp:possible-errors>
        <tp:error name="org.freedesktop.Telepathy.Error.InvalidArgument">
          A given message ID was not found, so no action was taken
        </tp:error>
      </tp:possible-errors>
    </method>
    <method name="GetMessageTypes">
      <arg direction="out" type="au">
        <tp:docstring>
          An array of integer message types (ChannelTextMessageType)
        </tp:docstring>
      </arg>
      <tp:docstring>
        Return an array indicating which types of message may be sent on this
        channel.
      </tp:docstring>
    </method>
    <method name="ListPendingMessages">
      <arg direction="in" name="clear" type="b">
        <tp:docstring>
          If true, remove all messages from the queue
        </tp:docstring>
      </arg>
      <arg direction="out" type="a(uuuuus)">
        <tp:docstring>
          An array of structs representing the pending queue. Each contains:
          <ul>
            <li>a numeric identifier</li>
            <li>a Unix timestamp indicating when the message was received</li>
            <li>the contact handle for the contact who sent the message</li>
            <li>the message type, taken from ChannelTextMessageType</li>
            <li>the bitwise-OR of the message flags from ChannelTextMessageFlags</li>
            <li>the text of the message</li>
          </ul>
        </tp:docstring>
      </arg>
      <tp:docstring>
        List the messages currently in the pending queue, and optionally
        remove then all.
      </tp:docstring>
    </method>
    <signal name="LostMessage">
      <tp:docstring>
        This signal is emitted to indicate that an incoming message was
        not able to be stored and forwarded by the connection manager
        due to lack of memory.
      </tp:docstring>
    </signal>
    <signal name="Received">
      <arg name="id" type="u">
        <tp:docstring>
          A numeric identifier for acknowledging the message
        </tp:docstring>
      </arg>
      <arg name="timestamp" type="u">
        <tp:docstring>
          A Unix timestamp indicating when the message was received
        </tp:docstring>
      </arg>
      <arg name="sender" type="u">
        <tp:docstring>
          The handle of the contact who sent the message
        </tp:docstring>
      </arg>
      <arg name="type" type="u">
        <tp:docstring>
          The type of the message (normal, action, notice, etc), from
          ChannelTextMessageType
        </tp:docstring>
      </arg>
      <arg name="flags" type="u">
        <tp:docstring>
          A bitwise OR of the message flags as defined by ChannelTextMessageFlags
        </tp:docstring>
      </arg>
      <arg name="text" type="s">
        <tp:docstring>
          The text of the message
        </tp:docstring>
      </arg>
      <tp:docstring>
        Signals that a message with the given id, timestamp, sender, type
        and text has been received on this channel. Applications that catch
        this signal and reliably inform the user of the message should
        acknowledge that they have dealt with the message with the
        AcknowledgePendingMessage method.
      </tp:docstring>
    </signal>
    <method name="Send">
      <arg direction="in" name="type" type="u">
        <tp:docstring>
          An integer indicating the type of the message, from
          ChannelTextMessageType
        </tp:docstring>
      </arg>
      <arg direction="in" name="text" type="s">
        <tp:docstring>
          The message to send
        </tp:docstring>
      </arg>
      <tp:docstring>
        Request that a message be sent on this channel. The Sent signal will be
        emitted when the message has been sent, and this method will return.
      </tp:docstring>
      <tp:possible-errors>
        <tp:error name="org.freedesktop.Telepathy.Error.Disconnected"/>
        <tp:error name="org.freedesktop.Telepathy.Error.NetworkError"/>
        <tp:error name="org.freedesktop.Telepathy.Error.InvalidArgument"/>
        <tp:error name="org.freedesktop.Telepathy.Error.PermissionDenied"/>
      </tp:possible-errors>
    </method>
    <tp:enum name="Channel_Text_Send_Error" type="u">
      <tp:enumvalue suffix="Unknown" value="0">
        <tp:docstring>
        An unknown error occurred
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="Offline" value="1">
        <tp:docstring>
        The requested contact was offline
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="Invalid_Contact" value="2">
        <tp:docstring>
        The requested contact is not valid
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="Permission_Denied" value="3">
        <tp:docstring>
        The user does not have permission to speak on this channel
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="Too_Long" value="4">
        <tp:docstring>
        The outgoing message was too long and was rejected by the server
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="Not_Implemented" value="5">
        <tp:docstring>
        The channel doesn't support sending text messages to the requested
        contact
        </tp:docstring>
      </tp:enumvalue>
    </tp:enum>
    <signal name="SendError">
      <arg name="error" type="u">
        <tp:docstring>
          One of the values of ChannelTextSendError
        </tp:docstring>
      </arg>
      <arg name="timestamp" type="u">
        <tp:docstring>
          The Unix timestamp indicating when the message was sent
        </tp:docstring>
      </arg>
      <arg name="type" type="u">
        <tp:docstring>
          The message type from ChannelTextMessageType
        </tp:docstring>
      </arg>
      <arg name="text" type="s">
        <tp:docstring>
          The text of the message
        </tp:docstring>
      </arg>
      <tp:docstring>
        Signals that an outgoing message has failed to send. The error
        will be one of the values from ChannelTextSendError.
      </tp:docstring>
    </signal>
    <signal name="Sent">
      <arg name="timestamp" type="u">
        <tp:docstring>
          Unix timestamp indicating when the message was sent
        </tp:docstring>
      </arg>
      <arg name="type" type="u">
        <tp:docstring>
          The message type (normal, action, notice, etc) from
          ChannelTextMessageType
        </tp:docstring>
      </arg>
      <arg name="text" type="s">
        <tp:docstring>
          The text of the message
        </tp:docstring>
      </arg>
      <tp:docstring>
        Signals that a message has been sent on this channel.
      </tp:docstring>
    </signal>
    <tp:enum name="Channel_Text_Message_Type" type="u">
      <tp:enumvalue suffix="Normal" value="0">
        <tp:docstring>
        A standard message
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="Action" value="1">
        <tp:docstring>
        An action which might be presented to the user as
        "* &lt;sender&gt; &lt;action&gt;"
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="Notice" value="2">
        <tp:docstring>
        A one-off or automated message not necessarily expecting a reply
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="Auto_Reply" value="3">
        <tp:docstring>
        An automatically-generated reply message
        </tp:docstring>
      </tp:enumvalue>
    </tp:enum>
    <tp:flags name="Channel_Text_Message_Flags" value-prefix="Channel_Text_Message_Flag" type="u">
      <tp:flag suffix="Truncated" value="1">
        <tp:docstring>
        The incoming message was truncated to a shorter length by the
        server or the connection manager.
        </tp:docstring>
      </tp:flag>
    </tp:flags>
    <tp:property name="anonymous" type="b">
      <tp:docstring>
      True if people may join the channel without other members being made
      aware of their identity.
      </tp:docstring>
    </tp:property>
    <tp:property name="invite-only" type="b">
      <tp:docstring>
      True if people may not join the channel until they have been invited.
      </tp:docstring>
    </tp:property>
    <tp:property name="limit" type="u">
      <tp:docstring>
      The limit to the number of members, if limited is true.
      </tp:docstring>
    </tp:property>
    <tp:property name="limited" type="b">
      <tp:docstring>
      True if there is a limit to the number of channel members.
      </tp:docstring>
    </tp:property>
    <tp:property name="moderated" type="b">
      <tp:docstring>
      True if channel membership is not sufficient to allow participation.
      </tp:docstring>
    </tp:property>
    <tp:property name="name" type="s">
      <tp:docstring>
      A human-visible name for the channel, if it differs from the string
      version of the channel's handle.
      </tp:docstring>
    </tp:property>
    <tp:property name="description" type="s">
      <tp:docstring>
      A human-readable description of the channel's overall purpose.
      </tp:docstring>
    </tp:property>
    <tp:property name="password" type="s">
      <tp:docstring>
      The password required to enter the channel if password-required is true.
      </tp:docstring>
    </tp:property>
    <tp:property name="password-required" type="b">
      <tp:docstring>
      True if a password must be provided to enter the channel.
      </tp:docstring>
    </tp:property>
    <tp:property name="persistent" type="b">
      <tp:docstring>
      True if the channel will remain in existence on the server after all
      members have left it.
      </tp:docstring>
    </tp:property>
    <tp:property name="private" type="b">
      <tp:docstring>
      True if the channel is not visible to non-members.
      </tp:docstring>
    </tp:property>
    <tp:property name="subject" type="s">
      <tp:docstring>
      A human-readable description of the current subject of conversation in
      the channel, similar to /topic in IRC.
      </tp:docstring>
    </tp:property>
    <tp:property name="subject-contact" type="u">
      <tp:docstring>
      A contact handle representing who last modified the subject.
      </tp:docstring>
    </tp:property>
    <tp:property name="subject-timestamp" type="u">
      <tp:docstring>
      A unix timestamp indicating when the subject was last modified.
      </tp:docstring>
    </tp:property>
    <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
      <p>A channel type for sending and receiving messages in plain text, with no
        formatting.</p>

      <p>When a message is received, an identifier is assigned and a Received signal
      emitted, and the message placed in a pending queue which can be inspected
      with ListPendingMessages. A client which has handled the message by showing
      it to the user (or equivalent) should acknowledge the receipt using the
      AcknowledgePendingMessage method, and the message will then be removed from
      the pending queue. Numeric identifiers for received messages may be reused
      over the lifetime of the channel.</p>

      <p>Each message has an associated 'type' value, which should be one of the
      values allowed by ChannelTextMessageType.</p>

      <p>Each message also has a flags value, which is a bitwise OR of the
      flags given in ChannelTextMessageFlags.</p>

      <p>Sending messages can be requested using the Send method, which will return
      and cause the Sent signal to be emitted when the message has been delivered
      to the server, or SendError if there is a failure.</p>
    </tp:docstring>
  </interface>
</node>
<!-- vim:set sw=2 sts=2 et ft=xml: -->
